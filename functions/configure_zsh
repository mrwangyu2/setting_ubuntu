#!/bin/bash

ALL_PLUGIN=""
function configure_zsh(){
  echo_message header "Starting configure_zsh functions"
  check_zsh_for_oh-my
  if [[ $? = 0 ]]; then
    install_oh-my-zsh
  fi
  setting_zsh
  change_shell_to_zsh
  change_oh-my-zsh_permission
}

function check_zsh_for_oh-my(){
  if [[ $(check_package_installed zsh) != 0 ]]; then
   echo_message error "zsh isn't installed, after insall it and try again."
   pause_process
   return 1;
  else
  #  if [[ -d ~/.oh-my-zsh  ]]; then
  #    echo_message error "oh-my-zsh is existion"
  #    pause_process
  #    return 1;
  #  else
      if [[ $SHELL = '/usr/bin/zsh' ]]; then
   	echo_message error "/usr/bin/zsh isn't installed, after insall it and try again."
        pause_process
        return 1;
      fi
      return 0;
  #  fi
  fi
}

function change_shell_to_zsh(){
  superuser_do "chsh -s /usr/bin/zsh"
}

function install_oh-my-zsh(){
  echo_message header "Starting install_oh-my-zsh function"
  echo_message info "You will install oh-my-zsh. After installed, please exit zsh to continue setting zsh :)"
  #sudo sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
  # sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
  sh -c "$(curl -fsL http://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

  if [[ $? = 0 ]]; then
    echo_message success "oh-my-zsh installed. :)"
    if [[ $OS = "Raspbain" ]]; then
      sudo cp -rf /root/.oh-my-zsh/ /home/pi/.
      echo_message info "copy oh-my-zsh to pi from root directory"
    fi
  fi
  pause_process
}

function setting_zsh_old(){
    git_clone_zsh_plugins
    get_all_zsh_plugins
    if (eval `resize` && whiptail \
        --title "Setting zsh plugins" \
        --yesno "List of plugins is \n\a$ALL_PLUGINS \n\nWould you like to setting those plugins to ~/zshrc?\n" \
        $LINES $COLUMNS $(( $LINES - 12 )) \
        3>&1 1>&2 2>&3) then
       setting_zsh_plugins
     else
       echo_message info "Cancelled setting zsh plugins."
     fi
}

function setting_zsh(){
    git_clone_zsh_plugins
    get_all_zsh_plugins
    install_fzf
    setting_zsh_plugins
}

function git_clone_zsh_plugins(){
  TITLE='zsh plugins...'
  echo_message title "Clone $TITLE"
  if [[ $ZSH_CUSTOM = "" ]]; then
    if [[ $OS = "Raspbain" ]]; then
      export ZSH_CUSTOM="/home/pi"
      echo_message info "ZSH_CUSTOM=$ZSH_CUSTOM"
    fi
  fi
  git_clone_from_list "$TITLE" 'zsh_git_clone'
}

function get_all_zsh_plugins(){
  LIST=$(dirname "$0")/data/zsh_plugins.list
  for PLUGIN in $(cat $LIST); do
      ALL_PLUGINS="${ALL_PLUGINS} $PLUGIN"
  done
  echo_message info "Plugins: $ALL_PLUGINS"
  pause_process
}

function setting_zsh_plugins(){
  if [[ -f ~/.zshrc ]]; then
    echo_message title "Setting zsh plugins."
    line=$(sed -n '/^plugins=(/=' ~/.zshrc)
    #line=$(( line + 1))
    echo_message info "line: ${line}"
    #sed -i "${line}s/.*/${ALL_PLUGINS}/g" ~/.zshrc
    sed -i "${line}s/.*/plugins=(${ALL_PLUGINS})/g" ~/.zshrc

    echo "source ~/.oh-my-zsh/custom/plugins/fzf-tab/fzf-tab.plugin.zsh" >> ~/.zshrc
    echo 'alias tmux="TERM=screen-256color-bce tmux"' >> ~/.zshrc 
    echo 'source ~/.profile' >> ~/.zshrc
    pause_process
  else
    echo_message error "Error: .zshrc isn't existion."
    pause_process
  fi
}

function change_oh-my-zsh_permission(){
  superuser_do chown -R frank:frank ~/.oh-my-zsh 
}

function install_fzf(){
  superuser_do chown -R frank:frank ~/.fzf 
  if [[ -f ~/.fzf/bin/fzf ]]; then
    ~/.fzf/install
  fi
}


