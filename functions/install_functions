#!/bin/bash

function pause_process(){
  read -p "Press anything to continue."
}

# $1 = Name
# $2 = list-name
# $3 = return_function
function install_from_list(){
  echo_message title "Starting installation of ${1}..."
  
  LIST=$(dirname "$0")'/data/'${2}'.list'
  
  if (eval `resize` && whiptail \
      --title "Install ${2}" \
      --yesno "Current list of packages will be installed: \n\n$(cat ${LIST}) \n\nWhould you like to process?" \
      $LINES $COLUMNS $(( $LINES - 12 )) \
      --scrolltext \
      3>&1 1>&2 2>&3) then
    
    for PACKAGE in $(cat $LIST); do
      if [[ $(check_package_installed ${PACKAGE}) != 0 ]]; then
        echo_message warning "Package $PACKAGE is not installed. Installing..."
        superuser_do "apt install -y $PACKAGE"
        if [[ $? != 0 ]]; then
          echo_message error "Error installing $PACKAGE"
        fi
      else
        echo_message info "Package '$PACKAGE' is installed."
      fi
    done

    echo_message success "Installing of $1 complete."
    pause_process
    whiptail --title "Finished" --msgbox "Installation of $1 is complete." 8 56 
    $3
      
  else
    echo_message info "Installtion of $1 cancelled."
    $3
  fi

}

# $1 = Name
# $2 = list-name
function git_clone_from_list(){
  echo_message title "Starting clone ${1}..."
  LIST=$(dirname "$0")'/data/'${2}'.list'

  if (eval `resize` && whiptail \
      --title "Install ${2}" \
      --yesno "Current list of url will be cloned: \n\n$(cat ${LIST}) \n\nWhould you like to process?" \
      $LINES $COLUMNS $(( $LINES - 12 )) \
      --scrolltext \
      3>&1 1>&2 2>&3) then
    
    #for PACKAGE in $(cat $LIST); do
    cat "$LIST" | while read PACKAGE
    do
        echo_message warning "Package $PACKAGE is not installed. Installing..."
        eval sudo git clone "$PACKAGE"
        if [[ $? != 0 ]]; then
          echo_message error "Error git clone $PACKAGE"
        fi
    done

    echo_message success "Cloned of $1 complete."
    pause_process
    whiptail --title "Finished" --msgbox "Cloned of $1 is complete." 8 56 
    $3
      
  else
    echo_message info "Cloned of $1 cancelled."
    $3
  fi
  
}

# $1 = Name
# $2 = list-name
# $3 = return_function
function download_tar_packages_from_list(){
  echo_message title "Starting downloading of ${1}..."
  
  LIST=$(dirname "$0")'/data/'${2}'.list'
  
  if (eval `resize` && whiptail \
      --title "Install ${2}" \
      --yesno "Current list of packages will be installed: \n\n$(cat ${LIST}) \n\nWhould you like to process?" \
      $LINES $COLUMNS $(( $LINES - 12 )) \
      --scrolltext \
      3>&1 1>&2 2>&3) then
    
    for PACKAGE in $(cat $LIST); do
      if [[ $(check_package_installed ${PACKAGE}) != 0 ]]; then
        echo_message warning "Package $PACKAGE is not installed. Installing..."
        superuser_do "apt install -y $PACKAGE"
        if [[ $? != 0 ]]; then
          echo_message error "Error installing $PACKAGE"
        fi
      else
        echo_message info "Package '$PACKAGE' is installed."
      fi
    done

    echo_message success "Installing of $1 complete."
    pause_process
    whiptail --title "Finished" --msgbox "Installation of $1 is complete." 8 56 
    $3
      
  else
    echo_message info "Installtion of $1 cancelled."
    $3
  fi

}
