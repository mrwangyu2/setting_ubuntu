#!/bin/bash
function check_package_installed(){
  dpkg-query -W --showformat=installed $1 | grep "installed" &> /dev/null
  echo $?
}

function check_os(){
  echo_message header "Starting check_os function"
  echo_message title "Checking which OS you are using..."
  OS_NAME="Linux"
  #echo_message info "Current OS is: "$(uname)
  if [[ $(uname) != $OS_NAME ]]; then
    echo_message error "Your OS is not Linux, Aborting... :("
    exit 99
  #else
  #  echo_message success "You are using ${OS_NAME} :D"
  fi

} 

function check_distribution(){
  echo_message header "Staring check_distribution function"
  if [[ $(which lsb_release &>/dev/null; echo $?) != 0 ]]; then
    echo_message error "\a Can't check distribution you are using!"
    echo_message error "Aborting!" && sleep 3 && exit 99
  else
    if lsb_release -ds | grep -qE '(Ubuntu)' || lsb_release -ds | grep -qE 'Raspbian'; then
      echo_message info "Current distribution is :"
      lsb_release -a
      echo_message success "Your OS is correct! :D"
      which_os
      if [[ $? = 1 ]]; then
        echo_message error "Distributon is not compatibility! :("
	exit 99
      fi
    else
      echo_message error "You are using a distribution that may not be compatible with this script set. :("
      exit 99
    fi
  fi
}

function which_os(){
  echo_message header "Starting which_os function"
  
  is_valid_os "Ubuntu 16.04" 
  if [[ $? = 0 ]]; then
    export OS="Ubuntu 16.04 LTS"
    return 16
  fi

  is_valid_os "Ubuntu 18.04" 
  if [[ $? = 0 ]]; then
    export OS="Ubuntu 18.04 LTS"
    return 18
  fi
  
  is_valid_os "Ubuntu 20.04" 
  if [[ $? = 0 ]]; then
    export OS="Ubuntu 20.04 LTS"
    return 20
  fi
  
  is_valid_os "Ubuntu 22.04" 
  if [[ $? = 0 ]]; then
    export OS="Ubuntu 22.04 LTS"
    return 22
  fi

  is_valid_os "Raspbian"
  if [[ $? = 0 ]]; then
    export OS="Raspbain"
    return 0
  fi

  return 1
}

# $1="Ubuntu" or "Raspbian"
function is_valid_os(){
    echo_message header "Starting is_valid_os function"

    lsb_release -ds | grep -qE "$1"
    if [[ $? = 0 ]]; then
      export OS=$1
      return 0
    else
      return 1
    fi
}

function check_privileges(){
  echo_message header "Starting check privileges function"
  echo_message title "Checking administrator privileges of current user..."
  
  if [[ $EUID != 0 ]]; then
    if [[ $(groups $USER | grep -q 'sudo'; echo $?) != 0 ]]; then
      echo_message error "This user account doesn't have admin privileges."
      exit 99
    else
      echo_message success "Current user has sudo privileges. :)"
    fi
  else
    echo_message error "This user account is root. This is not recommended. :("
    exit 99
  fi

}

function check_dependencies(){
  echo_message header "Start check_dependencies function"
  echo_message title "Checking necessary dependencies are installed..."

  LIST=$(dirname "$0")'/data/dependencies.list'
  for PACKAGE in $(cat $LIST); do
    if [[ $(check_package_installed $PACKAGE) != 0 ]]; then
      echo_message info " $PACKAGE is not installed :("
      echo_message question "Would you like to install it to continue? (Y)es (N)o: " && read REPLY

      case $REPLY in
      [Yy]*)
        echo_message warning "Requeirs root privileges"
        sudo apt install -y $PACKAGE
        echo_message success "Package $PACKAGE installed."
        ;;
      [Nn]*)
        echo_message info "Exiting..."
        exit 99
        ;;
      *)
        echo_message error 'Sorry, try again.' && check_dependencies
       ;;
      esac     
    #else
      # echo_message info "Dendencies $PACKAGE is installed."
    fi
  done
     echo_message success "All denpencies are installed. :)"

}

function system_checks(){
  check_os
  check_distribution
  check_privileges
  check_dependencies
}

